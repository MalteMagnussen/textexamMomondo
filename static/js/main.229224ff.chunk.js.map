{"version":3,"sources":["settings.js","apiFacade.jsx","components/Login.jsx","components/Welcome.jsx","components/Search.jsx","components/Admin.jsx","components/ShowRoles.jsx","components/getJokes.jsx","App.js","index.js"],"names":["localURL","handleHttpErrors","res","ok","json","Promise","reject","status","fullError","returnVal","makeOptions","method","addToken","body","opts","headers","Accept","getToken","JSON","stringify","localStorage","getItem","login","user","pass","setRoles","options","username","password","fetch","URL","then","token","setItem","jwtData","split","decodedJwtJsonData","window","atob","parse","roles","getRole","logout","removeItem","fetchGetData","endpoint","value","ApiFacade","LogIn","message","useState","setUser","onChange","evt","target","id","onSubmit","preventDefault","placeholder","type","className","LoggedIn","to","Welcome","rel","href","SearchFunction","persons","setPersons","errorMessage","setErrorMessage","ID","setID","event","onClick","facade","console","log","catch","err","e","code","MemberTable","members","Array","isArray","tableItems","map","member","Row","key","fName","hobbylist","lName","mail","residence","telephone","props","element","index","hobbyName","road","town","Search","permission","AdminPage","AdminPanel","loggedIn","includes","Show","prettyRoles","replace","toUpperCase","acceptable_categories","career","celebrity","dev","explicit","fashion","food","history","money","movie","music","political","science","sport","travel","GetJokes","categories","setCategories","jokes","setJokes","handleChange","name","Object","keys","Button","validCategories","forEach","category","push","length","myCategories","Table","joke","NoMatch","Header","setLoggedIn","exact","activeClassName","LogInScreen","setMessage","ShowRoles","App","path","component","WelcomePage","render","Admin","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.229224ff.chunk.js","sourcesContent":["//This file contains the URLs used in the application\r\n//Whenever you need an URL to access an endpoint, add it in here\r\n//and import this file whereever you need the URL\r\n\r\nexport const localURL = \"http://localhost:8080/testexamMomondo\";\r\nexport const onlineURL = \"https://maltemagnussen.com/testexamMomondo\";\r\n","//Change this before deployment (production)\nimport { localURL as URL } from \"./settings.js\";\nfunction handleHttpErrors(res) {\n  if (!res.ok) {\n    return Promise.reject({ status: res.status, fullError: res.json() });\n  }\n  return res.json();\n}\n\nconst ApiFacade = () => {\n  //Insert utility-methods from a latter step (d) here\n  function makeOptions(method, addToken, body) {\n    var opts = {\n      method: method,\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    };\n    if (addToken && loggedIn()) {\n      opts.headers[\"x-access-token\"] = getToken();\n    }\n    if (body) {\n      opts.body = JSON.stringify(body);\n    }\n    return opts;\n  }\n\n  function setToken(token) {\n    localStorage.setItem(\"jwtToken\", token);\n  }\n\n  function getToken() {\n    return localStorage.getItem(\"jwtToken\");\n  }\n\n  function loggedIn() {\n    const loggedIn = getToken() != null;\n    return loggedIn;\n  }\n\n  // const fetchSwapi = () => {\n  //   //Remember to always include options from the makeOptions fucntion with >true< as the second parameter\n  //   //if you want to access a protected endpoint\n  //   const options = makeOptions(\"GET\", true); //True add's the token\n  //   return fetch(URL + \"/api/info/five\", options).then(handleHttpErrors);\n  // };\n\n  const fetchGetData = (endpoint, value) => {\n    const options = makeOptions(\"GET\", true); //True add's the token\n    return fetch(URL + `/api/${endpoint}/${value}`, options).then(\n      handleHttpErrors\n    );\n  };\n\n  const getRole = () => {\n    let jwt = localStorage.getItem(\"jwtToken\");\n    let jwtData = jwt.split(\".\")[1];\n    let decodedJwtJsonData = window.atob(jwtData);\n    let decodedJwtData = JSON.parse(decodedJwtJsonData);\n    return decodedJwtData.roles;\n  };\n\n  const login = (user, pass, setRoles) => {\n    const options = makeOptions(\"POST\", true, {\n      username: user,\n      password: pass\n    });\n    return fetch(URL + \"/api/login\", options)\n      .then(handleHttpErrors)\n      .then(res => {\n        setToken(res.token);\n        setRoles(getRole());\n      });\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"jwtToken\");\n  };\n\n  return {\n    login,\n    logout,\n    fetchGetData\n  };\n};\n\nlet returnVal = ApiFacade();\nexport default returnVal;\n","import React, { useState, useEffect } from \"react\";\nimport facade from \"../apiFacade\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Link } from \"react-router-dom\";\n\nexport const LogIn = ({ login, message }) => {\n  const [user, setUser] = useState({ username: \"\", password: \"\" });\n\n  function log_in(evt) {\n    evt.preventDefault();\n    login(user.username, user.password);\n  }\n\n  const onChange = evt => {\n    setUser({ ...user, [evt.target.id]: evt.target.value });\n  };\n\n  return (\n    <div>\n      <h2>Login</h2>\n      <form onSubmit={log_in}>\n        <input placeholder=\"User Name\" id=\"username\" onChange={onChange} />{\" \"}\n        <input\n          placeholder=\"Password\"\n          id=\"password\"\n          type=\"password\"\n          onChange={onChange}\n        />{\" \"}\n        <button className=\"btn btn-primary\">Login</button>\n        <br></br>\n        <p>{message}</p>\n      </form>\n    </div>\n  );\n};\n\nexport const LoggedIn = () => {\n\n  return (\n    <>\n      <h2>You are now logged in</h2>\n      <Link to=\"/search\">Searching tool</Link>\n      <br></br>\n      <br></br>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../Welcome.css\";\n\nconst Welcome = () => {\n  return (\n    <>\n      <h1>Welcome Page</h1>\n      <h6>\n        <ins>After</ins> having set up the backend:\n      </h6>\n      <ol>\n        <li>\n          <code>npm install</code>\n        </li>\n        <li>\n          <code>npm start</code>\n        </li>\n      </ol>\n      <h6>Common issues:</h6>\n      <ul>\n        <li>\n          <code>npm audit fix --force</code>\n        </li>\n      </ul>\n      <h6>File overview</h6>\n      <label>\n        <i>src/components</i>\n      </label>\n      <br />\n      <ul className=\"border border-secondary customBorder\">\n        <li>\n          <code>Welcome.jsx</code> - Where you are\n        </li>\n        <li>\n          <code>Swapi.jsx</code> - Handles fetch call to the backend (Using\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://swapi.co/\">\n            {\" \"}\n            https://swapi.co/\n          </a>\n          )\n        </li>\n        <li>\n          <code>Login.jsx</code> - Handles login\n        </li>\n      </ul>\n      <br />\n      <label>\n        <i>src/</i>\n      </label>\n      <br />\n      <ul className=\"border border-secondary customBorder\">\n        <li>\n          <code>apiFacade.jsx</code> - Utility to help with fetching,\n          login/logout\n        </li>\n        <li>\n          <code>App.js</code> - Main component, handles routes &{\" \"}\n          <code>loggedIn</code>\n        </li>\n        <li>\n          <code>index.js</code> - Render component\n        </li>\n        <li>\n          <code>settings.js</code> - Holds global settings, such as fetch URLs\n        </li>\n\n        <span>\n          <i>CSS files</i>\n        </span>\n      </ul>\n      <p>\n        <Link to=\"#/login\">Login</Link> using the credentials you set in the\n        backend <code>utils\\SetupTestUsers.java</code>\n      </p>\n    </>\n  );\n};\n\nexport default Welcome;\n","import React, { useState } from \"react\";\nimport facade from \"../apiFacade\";\n\nconst Search = ({ permission }) => {\n  if (!permission) {\n    return (\n      <>\n        <p>You are not logged in</p>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <SearchFunction />\n      </>\n    );\n  }\n};\n\nconst SearchFunction = () => {\n  const [persons, setPersons] = useState();\n  const [hobbies, setHobbies] = useState();\n  const [errorMessage, setErrorMessage] = useState();\n\n  const [ID, setID] = useState(0);\n\n  const getPersonData = (endpoint, value) => {\n    facade\n      .fetchGetData(\"krak/\" + endpoint, value)\n      .then(res => {\n        console.log(res);\n        setPersons(res);\n        setErrorMessage(\"\");\n      })\n      .catch(err => {\n        if (err.status) {\n          err.fullError.then(e => {\n            setErrorMessage(e.message);\n            console.log(e.code, e.message);\n          });\n        } else {\n          console.log(\"Network error\");\n        }\n      });\n  };\n\n  const handleChange = event => {\n    setID(event.target.value);\n  };\n\n  const handleSubmit = () => {\n    getPersonData(\"id\", ID);\n    setID(0);\n  };\n\n  return (\n    <>\n      <h4>{errorMessage}</h4>\n      <h1>Search for people and hobbies</h1>\n      <input id=\"personID\" value={ID} type=\"number\" onChange={handleChange} />\n      <button type=\"button\" onClick={handleSubmit}>\n        Get by ID\n      </button>\n      {persons && (\n        <MemberTable members={!Array.isArray(persons) ? [persons] : persons} />\n      )}\n    </>\n  );\n};\n\nfunction MemberTable({ members }) {\n  const tableItems = members.map(member => (\n    <Row\n      key={member.id}\n      fName={member.fName}\n      id={member.id}\n      hobbylist={member.hobbylist}\n      lName={member.lName}\n      mail={member.mail}\n      residence={member.residence}\n      telephone={member.telephone}\n    />\n  ));\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th>First Name</th>\n          <th>Hobbies</th>\n          <th>ID</th>\n          <th>Last Name</th>\n          <th>Email</th>\n          <th>Address</th>\n          <th>City</th>\n          <th>Phone</th>\n        </tr>\n      </thead>\n      <tbody>{tableItems}</tbody>\n    </table>\n  );\n}\n\nfunction Row(props) {\n  console.log(props.hobbylist);\n  return (\n    <tr>\n      <td>{props.fName}</td>\n      <td>\n        {props.hobbylist.map((element, index) => {\n          return <li key={index}>{element.hobbyName}</li>;\n        })}\n      </td>\n      <td>{props.id}</td>\n      <td>{props.lName}</td>\n      <td>{props.mail}</td>\n      <td>{props.residence.road}</td>\n      <td>{props.residence.town}</td>\n      <td>{props.telephone}</td>\n    </tr>\n  );\n}\n\nexport default Search;\n","import React, { useState } from \"react\";\nimport facade from \"../apiFacade.jsx\";\n\nconst acceptable_categories = [\n  \"career\",\n  \"celebrity\",\n  \"dev\",\n  \"explicit\",\n  \"fashion\",\n  \"food\",\n  \"history\",\n  \"money\",\n  \"movie\",\n  \"music\",\n  \"political\",\n  \"science\",\n  \"sport\",\n  \"travel\"\n];\n\nconst AdminPanel = ({ loggedIn, roles }) => {\n  if (!loggedIn || !roles.includes(\"admin\")) {\n    return (\n      <>\n        <p>You are not logged in as admin</p>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <AdminPage />\n      </>\n    );\n  }\n};\n\nconst AdminPage = () => {\n  return <> Youre logged in as Admin. </>;\n};\n\nexport default AdminPanel;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst Show = ({ roles }) => {\n    let prettyRoles = roles;\n    prettyRoles = prettyRoles.replace(/\\[|\\]|\\\"/g, '').replace(',', ' & ').toUpperCase();\n\n    return (\n        <p>Permission: {prettyRoles}</p>\n    );\n};\n\nexport default Show;","import React, { useState } from \"react\";\r\nimport { Button, Table } from \"react-bootstrap\";\r\nimport facade from \"../apiFacade.jsx\";\r\n\r\nconst acceptable_categories = {\r\n  career: false,\r\n  celebrity: false,\r\n  dev: false,\r\n  explicit: false,\r\n  fashion: false,\r\n  food: false,\r\n  history: false,\r\n  money: false,\r\n  movie: false,\r\n  music: false,\r\n  political: false,\r\n  science: false,\r\n  sport: false,\r\n  travel: false\r\n};\r\nconst GetJokes = ({ loggedIn }) => {\r\n  const [categories, setCategories] = useState(acceptable_categories);\r\n  const [jokes, setJokes] = useState({});\r\n\r\n  const handleChange = e => {\r\n    const name = e.target.value;\r\n    setCategories({ ...categories, [name]: !categories[name] });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const validCategories = [];\r\n\r\n    Object.keys(categories).forEach(category => {\r\n      if (categories[category] == true) validCategories.push(category);\r\n    });\r\n\r\n    if (!loggedIn && validCategories.length > 4) {\r\n      return;\r\n    }\r\n\r\n    const myCategories = validCategories.map((element, index) => {\r\n      if (index == 0) return element;\r\n      return element;\r\n    });\r\n\r\n    let URL = loggedIn => {\r\n      if (loggedIn) {\r\n        return \"jokeByCategoryV2\";\r\n      } else {\r\n        return \"jokeByCategory\";\r\n      }\r\n    };\r\n\r\n    facade\r\n      .fetchGetData(URL(loggedIn), myCategories)\r\n      .then(res => {\r\n        setJokes(res);\r\n        console.log(res);\r\n      })\r\n      .catch(err => {\r\n        if (err.status) {\r\n          err.fullError.then(e => {\r\n            console.log(e.code, e.message);\r\n          });\r\n        } else {\r\n          console.log(\"Network error\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <br />\r\n      <div>\r\n        <h3> Select jokes </h3>\r\n        <h5> {!loggedIn && \"You may only select 4 categories.\"} </h5>\r\n        <form>\r\n          {Object.keys(categories).map((e, index) => {\r\n            return (\r\n              <div key={index}>\r\n                <input type=\"checkbox\" value={e} onChange={handleChange} />\r\n                {e}\r\n              </div>\r\n            );\r\n          })}\r\n          <Button type=\"button\" className=\"btn-primary\" onClick={handleSubmit}>\r\n            Submit\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      <div>\r\n        <br />\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>Category</th>\r\n              <th>Joke</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {jokes &&\r\n              jokes.jokes &&\r\n              jokes.jokes.map((element, index) => {\r\n                return (\r\n                  <tr key={index}>\r\n                    <td>{element.category}</td>\r\n                    <td>{element.joke}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GetJokes;\r\n","import React, { useState, useEffect } from \"react\";\nimport facade from \"./apiFacade\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { LogIn, LoggedIn } from \"./components/Login.jsx\";\nimport WelcomePage from \"./components/Welcome.jsx\";\nimport Search from \"./components/Search.jsx\";\nimport Admin from \"./components/Admin.jsx\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n  useParams,\n  useRouteMatch,\n  Link,\n  Prompt\n} from \"react-router-dom\";\nimport ShowRoles from \"./components/ShowRoles.jsx\";\nimport Jokes from \"./components/getJokes.jsx\";\n\nconst App = () => {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [roles, setRoles] = useState([]);\n  return (\n    <>\n      <Router>\n        <Header\n          loggedIn={loggedIn}\n          setLoggedIn={setLoggedIn}\n          roles={roles}\n          setRoles={setRoles}\n        />\n        <div className=\"container\">\n          <Switch>\n            <Route exact path=\"/\" component={WelcomePage} />\n            <Route\n              path=\"/login\"\n              render={() => (\n                <LogInScreen\n                  loggedIn={loggedIn}\n                  setLoggedIn={setLoggedIn}\n                  roles={roles}\n                  setRoles={setRoles}\n                />\n              )}\n            />\n            <Route path=\"/search\">\n              <Search permission={loggedIn} />\n            </Route>\n            <Route path=\"/admin\">\n              <Admin loggedIn={loggedIn} roles={roles} />\n            </Route>\n            <Route path=\"/Jokes\">\n              <Jokes loggedIn={loggedIn} />\n            </Route>\n            <Route component={NoMatch} />\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n};\n\nconst NoMatch = () => (\n  <div>You're trying to access a resource that doesn't exist.</div>\n);\n\nconst Header = ({ loggedIn, setLoggedIn, roles, setRoles }) => {\n  return (\n    <ul className=\"header\">\n      <li>\n        <NavLink exact activeClassName=\"active\" to=\"/\">\n          Home\n        </NavLink>\n      </li>\n\n      {/*Login / logout start*/}\n      {!loggedIn ? (\n        <li>\n          <NavLink activeClassName=\"active\" to=\"/login\">\n            Login\n          </NavLink>\n        </li>\n      ) : (\n        <li>\n          <NavLink\n            onClick={() => {\n              setLoggedIn(false);\n              facade.logout();\n              setRoles([]);\n            }}\n            to=\"/login\"\n          >\n            Log out\n          </NavLink>\n        </li>\n      )}\n      {/*Login / logout end*/}\n      <li>\n        <NavLink to=\"/Jokes\">Jokes</NavLink>\n      </li>\n      {loggedIn && (\n        <li>\n          <NavLink to=\"/search\">Search</NavLink>\n        </li>\n      )}\n      {loggedIn && roles.includes(\"admin\") && (\n        <li>\n          <NavLink to=\"/admin\">Admin panel</NavLink>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nconst LogInScreen = ({ loggedIn, setLoggedIn, roles, setRoles }) => {\n  const [message, setMessage] = useState(\"\");\n  const login = (user, pass) => {\n    facade\n      .login(user, pass, setRoles)\n      .then(res => {\n        setMessage(\"\");\n        setLoggedIn(true);\n      })\n      .catch(err => {\n        if (err.status) {\n          setMessage(\"Failed to log in, check your information\");\n          err.fullError.then(e => console.log(e.code, e.message));\n        } else {\n          console.log(\"Network error\");\n        }\n      });\n  };\n\n  return (\n    <div>\n      {!loggedIn ? (\n        <LogIn login={login} message={message} />\n      ) : (\n        <div>\n          {roles.length && (\n            <>\n              <ShowRoles roles={roles} />\n              <LoggedIn />\n            </>\n          )}\n        </div>\n      )}\n      <br></br>\n      <Link to=\"/\">Back to WelcomePage</Link>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}